
---
  - hosts: localhost
    become: yes
    vars_prompt:
      name: admin_user_pass
      prompt: what is the pass?

    tasks:

    - name: read admin pwd

      ansible.builtin.shell: cat /var/lib/jenkins/secrets/initialAdminPassword

      register: adminpwd

    - name: unlock and add admin user

      jenkins_script:

       script: |

        import jenkins.model.*

        import hudson.security.*

        def instance = Jenkins.getInstance()

        def hudsonRealm = new HudsonPrivateSecurityRealm(false)

        hudsonRealm.createAccount('jenkins', '${user_pwd}')

        instance.setSecurityRealm(hudsonRealm)

        def strategy = new FullControlOnceLoggedInAuthorizationStrategy()

        strategy.setAllowAnonymousRead(false)

        instance.setAuthorizationStrategy(strategy)

        instance.save()

       args:

        user_pwd: "{{ admin_user_pass }}"

       user: admin

       password: "{{ adminpwd.stdout }}"



    - name: complete setup wizard

      jenkins_script:

       script: |

        import static jenkins.model.Jenkins.instance as jenkins

        import jenkins.install.InstallState

        if (!jenkins.installState.isSetupComplete()) {

          InstallState.INITIAL_SETUP_COMPLETED.initializeState()

        }

       user: admin

       password: "{{ adminpwd.stdout }}"

    - name: Pause to wait for Jenkins to fully start up

      pause:
        minutes: 1

    - name: install plugin
      jenkins_plugin:

       name: "{{ item }}"

       state: latest

       url_username: admin

       url_password: "{{ adminpwd.stdout }}"

      with_items:
        - ansible
        - ant
        - build-timeout 
        - cloudbees-folder
        - configuration-as-code
        - credentials-binding
        - email-ext
        - git
        - github-branch-source
        - gradle
        - ldap
        - job-dsl
        - mailer
        - matrix-auth
        - maven
        - pam-auth
        - pipeline-github-lib
        - pipeline-stage-view
        - ssh-slaves
        - timestamper
        - workflow-aggregator
        - ws-cleanup
    - name: Move JCasC config file to Jenkins Folder
      ansible.builtin.copy:
        src: jenkins.yaml
        dest: /var/lib/jenkins/jenkins.yaml

    - name: Restart Jenkins Service 
      ansible.builtin.service:
        name: jenkins
        state: restarted 
